{"version":3,"sources":["redux/loading/loading-reducers.jsx","redux/loading/loading-selectors.jsx","routes.js","components/MyNavLink/MyNavLink.jsx","components/Navigation/Navigation.jsx","components/AuthNav/AuthNav.jsx","components/UserMenu/avatar.png","components/UserMenu/UserMenu.jsx","components/AppBar/AppBar.jsx","components/PrivateRoute.js","components/PublicRoute.js","components/Container/Container.jsx","components/Modal/Modal.jsx","components/Spinner/Spinner.jsx","App.js","redux/store.jsx","index.js","redux/contacts/contacts-actions.jsx","redux/contacts/contacts-operations.jsx","redux/contacts/contacts-reducer.jsx","redux/contacts/contacts-selectors.jsx","components/UserMenu/UserMenu.module.css","components/notification.js","components/MyNavLink/MyNavLink.module.css","redux/auth/auth-actions.jsx","redux/auth/auth-operations.jsx","redux/auth/auth-reducer.jsx","redux/auth/auth-selectors.jsx","components/Navigation/Navigation.module.css","components/AuthNav/AuthNav.module.css","components/Container/Container.module.css","components/Modal/Modal.module.css"],"names":["registerRequest","authActions","registerSuccess","registerError","logoutRequest","logoutSuccess","logoutError","loginRequest","loginSuccess","loginError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","fetchContactsRequest","contactsActions","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","loading","createReducer","GetIsLoading","getIsLoading","state","Routes","register","login","contacts","MyNavLink","props","className","styles","navLink","activeClassName","activeNavLink","MyButton","styled","MaterialButton","padding","connect","isAuthenticated","authSelectors","getIsAuthenticated","btn","to","exact","AuthNav","authNav","MyAvatar","Avatar","width","height","marginRight","mapDispatchToProps","onLogout","authOperations","logout","name","getUserName","avatar","defaultAvatar","userMenu","src","alt","type","onClick","MyToolbar","MaterialToolbar","justifyContent","backgroundColor","Component","component","redirectTo","routeProps","render","restricted","Container","children","container","modalRoot","document","querySelector","Modal","createPortal","Overlay","Spinner","css","size","color","ContactsView","lazy","LoginView","RegisterView","App","this","onGetCurrentUser","fallback","path","routes","position","autoClose","newestOnTop","limit","transition","Zoom","isLoading","getCurrentUser","loadingSelectors","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contactsReducer","auth","persistReducer","authReducer","loadingReducers","devTools","process","Store","persistor","persistStore","ReactDOM","StrictMode","getElementById","createAction","Actions","changeFilter","resetFilter","Operations","addContact","newContact","dispatch","axios","post","then","data","catch","error","message","deleteContact","contactId","delete","fetchContacts","get","items","_","payload","filter","id","combineReducers","getItems","getFilter","Selectors","filteredItems","createSelector","normalizedFilter","toLowerCase","includes","module","exports","notification","text","toast","defaults","baseURL","token","headers","common","Authorization","credentials","a","getState","persistedToken","initialUserState","email","user"],"mappings":"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","file":"static/js/main.e58d075b.chunk.js","sourcesContent":["import { createReducer } from '@reduxjs/toolkit';\r\nimport { authActions } from '../auth';\r\nimport { contactsActions } from '../contacts';\r\n\r\nconst {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} = authActions;\r\n\r\nconst {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} = contactsActions;\r\n\r\nconst loading = createReducer(false, {\r\n  [registerRequest]: () => true,\r\n  [registerSuccess]: () => false,\r\n  [registerError]: () => false,\r\n  [logoutRequest]: () => true,\r\n  [logoutSuccess]: () => false,\r\n  [logoutError]: () => false,\r\n  [loginRequest]: () => true,\r\n  [loginSuccess]: () => false,\r\n  [loginError]: () => false,\r\n  [getCurrentUserRequest]: () => true,\r\n  [getCurrentUserSuccess]: () => false,\r\n  [getCurrentUserError]: () => false,\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nexport default loading;","const getIsLoading = state => state.loading;\r\n\r\nconst GetIsLoading = { getIsLoading };\r\n\r\nexport default GetIsLoading;","const Routes = {\r\n  register: '/register',\r\n  login: '/login',\r\n  contacts: '/contacts',\r\n};\r\n\r\nexport default Routes;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './MyNavLink.module.css';\r\n\r\nconst MyNavLink = props => (\r\n  <NavLink\r\n    className={styles.navLink}\r\n    activeClassName={styles.activeNavLink}\r\n    {...props}\r\n  ></NavLink>\r\n);\r\n\r\nexport default MyNavLink;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../../redux/auth';\r\nimport MyNavLink from '../MyNavLink';\r\nimport styles from './Navigation.module.css';\r\n\r\nimport MaterialButton from '@material-ui/core/Button';\r\nimport { styled } from '@material-ui/core/styles';\r\n\r\nconst MyButton = styled(MaterialButton)({\r\n  padding: '0',\r\n});\r\n\r\nconst Navigation = ({ isAuthenticated }) => (\r\n  <nav>\r\n    {isAuthenticated && (\r\n      <MyButton className={styles.btn}>\r\n        <MyNavLink to=\"/contacts\" exact>\r\n          Контакти\r\n        </MyNavLink>\r\n      </MyButton>\r\n    )}\r\n  </nav>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navigation);","import React from 'react';\r\nimport MyNavLink from '../MyNavLink';\r\nimport styles from './AuthNav.module.css';\r\n\r\nimport MaterialButton from '@material-ui/core/Button';\r\nimport { styled } from '@material-ui/core/styles';\r\n\r\nconst MyButton = styled(MaterialButton)({\r\n  padding: '0',\r\n});\r\n\r\nconst AuthNav = () => (\r\n  <div className={styles.authNav}>\r\n    <MyButton>\r\n      <MyNavLink to=\"/register\" exact>\r\n        Реєстрація\r\n      </MyNavLink>\r\n    </MyButton>\r\n    <MyButton>\r\n      <MyNavLink to=\"/login\" exact>\r\n        Вхід\r\n      </MyNavLink>\r\n    </MyButton>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;","export default __webpack_public_path__ + \"static/media/avatar.e7012cd6.png\";","  \r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors, authOperations } from '../../redux/auth';\r\nimport defaultAvatar from './avatar.png';\r\nimport styles from './UserMenu.module.css';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { styled } from '@material-ui/core/styles';\r\n\r\nimport MaterialButton from '@material-ui/core/Button';\r\n\r\nconst MyAvatar = styled(Avatar)({\r\n  width: '32px',\r\n  height: '32px',\r\n  marginRight: '10px',\r\n});\r\n\r\nconst UserMenu = ({ avatar, name, onLogout }) => (\r\n  <div className={styles.userMenu}>\r\n    <MyAvatar className={styles.avatar} src={avatar} alt=\"\" width=\"32\" />\r\n    <span className={styles.name}>Welcome, {name}</span>\r\n    <MaterialButton type=\"button\" onClick={onLogout}>\r\n      Logout\r\n    </MaterialButton>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  name: authSelectors.getUserName(state),\r\n  avatar: defaultAvatar,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onLogout: authOperations.logout,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);","import React from 'react';\r\nimport Navigation from '../Navigation';\r\nimport AuthNav from '../AuthNav';\r\nimport UserMenu from '../UserMenu';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../../redux/auth';\r\nimport MaterialAppBar from '@material-ui/core/AppBar';\r\nimport MaterialToolbar from '@material-ui/core/Toolbar';\r\nimport { styled } from '@material-ui/core/styles';\r\n\r\nconst MyToolbar = styled(MaterialToolbar)({\r\n  justifyContent: 'space-between',\r\n  backgroundColor: 'olive',\r\n});\r\n\r\nconst AppBar = ({ isAuthenticated }) => (\r\n  <MaterialAppBar>\r\n    <MyToolbar>\r\n      <Navigation />\r\n      {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n    </MyToolbar>\r\n  </MaterialAppBar>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppBar);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);","import React from 'react';\r\nimport styles from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={styles.container}>{children}</div>\r\n);\r\n\r\nexport default Container;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { createPortal } from 'react-dom';\r\nimport styles from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nconst Modal = ({ children }) => {\r\n  return createPortal(\r\n    <div className={styles.Overlay}>\r\n      <div>{children}</div>\r\n    </div>,\r\n    modalRoot,\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default Modal;","import React from 'react';\r\nimport Modal from '../Modal';\r\nimport RotateLoader from 'react-spinners/RotateLoader';\r\nimport { css } from '@emotion/core';\r\n\r\nconst whichPosition = () => {\r\n  return css`\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n  `;\r\n};\r\n\r\nconst Spinner = () => (\r\n  <>\r\n    <Modal>\r\n      <RotateLoader css={whichPosition()} size={20} color={'olive'} />\r\n    </Modal>\r\n  </>\r\n);\r\n\r\nexport default Spinner;","import React, { lazy, Suspense, Component } from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport { authOperations } from './redux/auth';\nimport { loadingSelectors } from './redux/loading';\nimport { connect } from 'react-redux';\nimport routes from './routes';\nimport { ToastContainer, Zoom } from 'react-toastify';\nimport AppBar from './components/AppBar';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nimport Container from './components/Container';\nimport Spinner from './components/Spinner';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nconst ContactsView = lazy(() =>\n  import('./views/ContactsView' /* webpackChunkName: \"ContactsView\" */),\n);\nconst LoginView = lazy(() =>\n  import('./views/LoginView' /* webpackChunkName: \"LoginView\" */),\n);\nconst RegisterView = lazy(() =>\n  import('./views/RegisterView' /* webpackChunkName: \"RegisterView\" */),\n);\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n\n  render() {\n    return (\n      <>\n        <AppBar />\n        <Container>\n          <Suspense fallback={<Spinner />}>\n            <Switch>\n              <Route exact path=\"/\">\n                <Redirect to={routes.login} />\n              </Route>\n              <PrivateRoute\n                path={routes.contacts}\n                component={ContactsView}\n                redirectTo={routes.login}\n              />\n              <PublicRoute\n                path={routes.login}\n                restricted\n                redirectTo={routes.contacts}\n                component={LoginView}\n              />\n              <PublicRoute\n                path={routes.register}\n                restricted\n                redirectTo={routes.contacts}\n                component={RegisterView}\n              />\n            </Switch>\n          </Suspense>\n          <ToastContainer\n            position=\"top-center\"\n            autoClose={3000}\n            newestOnTop\n            limit={3}\n            transition={Zoom}\n          />\n        </Container>\n        {this.props.isLoading && <Spinner />}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isLoading: loadingSelectors.getIsLoading(state),\n});\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: authOperations.getCurrentUser,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { contactsReducer } from './contacts';\r\nimport { authReducer } from './auth';\r\nimport { loadingReducers } from './loading';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'token',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    loading: loadingReducers,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nconst Store = { store, persistor };\r\n\r\nexport default Store;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'fontsource-roboto';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst fetchContactsRequest = createAction('contacts/fetchContactsRequest');\r\nconst fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\r\nconst fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nconst addContactRequest = createAction('contacts/addContactRequest');\r\nconst addContactSuccess = createAction('contacts/addContactSuccess');\r\nconst addContactError = createAction('contacts/addContactError');\r\n\r\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nconst deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\nconst resetFilter = createAction('contscts/resetFilter');\r\n\r\nconst Actions = {\r\n  changeFilter,\r\n  resetFilter,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n};\r\n\r\nexport default Actions;\r\n","import axios from 'axios';\r\nimport contactsActions from './contacts-actions';\r\n\r\nconst {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} = contactsActions;\r\n\r\nconst fetchContacts = () => dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(fetchContactsError(error.message)));\r\n};\r\n\r\nconst addContact = newContact => dispatch => {\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', newContact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error.message)));\r\n};\r\n\r\nconst deleteContact = contactId => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(deleteContactSuccess(contactId)))\r\n    .catch(error => dispatch(deleteContactError(error.message)));\r\n};\r\n\r\nconst Operations = { addContact, deleteContact, fetchContacts };\r\n\r\nexport default Operations;","import contactsActions from './contacts-actions';\r\nimport { createReducer, combineReducers } from '@reduxjs/toolkit';\r\n\r\nconst {\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n  resetFilter,\r\n} = contactsActions;\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [payload, ...state],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n  [resetFilter]: () => '',\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContactsError]: (_, { payload }) => payload,\r\n  [addContactError]: (_, { payload }) => payload,\r\n  [deleteContactError]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  error,\r\n});","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getItems = state => state.contacts.items;\r\n\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst filteredItems = createSelector([getFilter, getItems], (filter, items) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return items.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n});\r\n\r\nconst Selectors = { getItems, getFilter, filteredItems };\r\n\r\nexport default Selectors;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userMenu\":\"UserMenu_userMenu__2WeH3\",\"name\":\"UserMenu_name__TU386\"};","import { toast } from 'react-toastify';\r\n\r\nconst notification = text => {\r\n  return toast.error(text);\r\n};\r\n\r\nexport default notification;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLink\":\"MyNavLink_navLink__24X5x\",\"activeNavLink\":\"MyNavLink_activeNavLink__2J58X\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nconst Actions = {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n\r\nexport default Actions;","import axios from 'axios';\r\nimport authActions from './auth-actions';\r\nimport notification from '../../components/notification';\r\n\r\nconst {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} = authActions;\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com/';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = credentials => async dispatch => {\r\n  dispatch(registerRequest());\r\n\r\n  try {\r\n    const { data } = await axios.post('/users/signup', credentials);\r\n\r\n    token.set(data.token);\r\n    dispatch(registerSuccess(data));\r\n  } catch (error) {\r\n    notification('Wrong email or password');\r\n    dispatch(registerError(error.message));\r\n  }\r\n};\r\n\r\nconst login = credentials => async dispatch => {\r\n  dispatch(loginRequest());\r\n\r\n  try {\r\n    const { data } = await axios.post('/users/login', credentials);\r\n\r\n    token.set(data.token);\r\n    dispatch(loginSuccess(data));\r\n  } catch (error) {\r\n    notification('Wrong email or password');\r\n    dispatch(loginError(error.message));\r\n  }\r\n};\r\n\r\nconst logout = () => async dispatch => {\r\n  dispatch(logoutRequest());\r\n\r\n  try {\r\n    await axios.post('/users/logout');\r\n\r\n    token.unset();\r\n    dispatch(logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(logoutError(error.message));\r\n  }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n\r\n  dispatch(getCurrentUserRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/users/current');\r\n\r\n    dispatch(getCurrentUserSuccess(data));\r\n  } catch (error) {\r\n    dispatch(getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\nconst Operations = { register, login, logout, getCurrentUser };\r\nexport default Operations;","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './auth-actions';\r\n\r\nconst {\r\n  registerSuccess,\r\n  registerError,\r\n  logoutSuccess,\r\n  logoutError,\r\n  loginSuccess,\r\n  loginError,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} = authActions;\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [registerSuccess]: (_, { payload }) => payload.user,\r\n  [loginSuccess]: (_, { payload }) => payload.user,\r\n  [logoutSuccess]: () => initialUserState,\r\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [registerSuccess]: (_, { payload }) => payload.token,\r\n  [loginSuccess]: (_, { payload }) => payload.token,\r\n  [logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [registerError]: (_, { payload }) => payload,\r\n  [loginError]: (_, { payload }) => payload,\r\n  [logoutError]: (_, { payload }) => payload,\r\n  [getCurrentUserError]: (_, { payload }) => payload,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [registerSuccess]: () => true,\r\n  [loginSuccess]: () => true,\r\n  [getCurrentUserSuccess]: () => true,\r\n  [registerError]: () => false,\r\n  [loginError]: () => false,\r\n  [getCurrentUserError]: () => false,\r\n  [logoutSuccess]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n    user,\r\n    token,\r\n    error,\r\n    isAuthenticated,\r\n});\r\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\r\n\r\nconst getUserName = state => state.auth.user.name;\r\n\r\nconst Selectors = {\r\n    getIsAuthenticated,\r\n    getUserName,\r\n};\r\n\r\nexport default Selectors;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Navigation_btn__3hR1Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"authNav\":\"AuthNav_authNav__3kWHI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__14sMD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3AhVU\"};"],"sourceRoot":""}